# This file was *autogenerated* from the file test.sage
from sage.all_cmdline import *   # import sage library
_sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0); _sage_const_2p5 = RealNumber('2.5'); _sage_const_15 = Integer(15); _sage_const_30 = Integer(30)
import numpy
import matplotlib.pylab as plt
import matplotlib.cm as cm
import ctypes
import time
start=time.time()
LIB = '/Users/chrisdock/Documents/chaos/ccodefromsage/testfast2/test.dylib'

maxiter = _sage_const_30 
numsamples = _sage_const_15 
grid= _sage_const_2 
print "grid: "+str(grid)+", numsamples: "+str(numsamples)+", maxiter: "+str(maxiter)
"""
ymin=0
ymax=2*N(pi)
xmin=0
xmax=2*N(pi)
"""
ymin = -_sage_const_2p5 
ymax = _sage_const_2p5 
xmin = -_sage_const_2p5 
xmax = _sage_const_2p5 


deltax = (xmax-xmin)/grid
deltay = (ymax-ymin)/grid

X = ctypes.CDLL(LIB)
m = matrix.ones(grid,grid)
m = m.numpy('uint8')
print "started c"
X.forward(ctypes.c_int32(maxiter),
       ctypes.c_int32(maxiter),
	   ctypes.c_int32(numsamples),
       ctypes.c_int32(grid),
       ctypes.c_int32(grid),
	   ctypes.c_double(xmin),
	   ctypes.c_double(ymin),
	   ctypes.c_double(deltax),
       ctypes.c_double(deltay),
	   m.ctypes.data_as(ctypes.c_void_p))
print "finished c"
x = numpy.vectorize(lambda x: x)(m)
imgplot = plt.imshow(x,vmin=_sage_const_0 , vmax=_sage_const_1 ,interpolation='none',cmap=cm.Blues,extent=[xmin,xmax,ymin,ymax])
plt.savefig("algc2_result.ps")
end=time.time()
print "total time: "+str(end-start)


