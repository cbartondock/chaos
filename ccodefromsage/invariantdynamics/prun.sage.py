# This file was *autogenerated* from the file prun.sage
from sage.all_cmdline import *   # import sage library
_sage_const_2 = Integer(2); _sage_const_0 = Integer(0); _sage_const_410 = Integer(410); _sage_const_200 = Integer(200); _sage_const_0p = RealNumber('0.'); _sage_const_1000 = Integer(1000); _sage_const_25 = Integer(25)
import numpy as np
import matplotlib.pylab as plt
import matplotlib.cm as cm
import ctypes
import time


def rmod(x, y):
    result = x - int(x/y)*y
    return result if result >= _sage_const_0  else result + y


start=time.time()
LIB = '/Users/chrisdock/Documents/chaos/ccodefromsage/invariantdynamics/ergodic.dylib'



grid=_sage_const_410 
imatrix = np.ones((grid,grid))#np.loadtxt("outputs/imatrix.txt")
imatrix = imatrix.astype(long)
#p = np.loadtxt("outputs/parameters.txt")
xmin=_sage_const_0p 
ymin=_sage_const_0p 
xmax=_sage_const_2 *np.pi;
ymax=_sage_const_2 *np.pi
deltax=(xmax-xmin)/grid
deltay=(ymax-ymin)/grid

kgrid = _sage_const_25 ;
totaltime = _sage_const_1000 ;
ERG = ctypes.CDLL(LIB)
print "started c"
"""ERG.partition(ctypes.c_int32(int(p[0])),
        ctypes.c_int32(int(p[0])),
        ctypes.c_int32(totaltime),
        ctypes.c_double(p[1]),
        ctypes.c_double(p[2]),
        ctypes.c_double(p[3]),
        ctypes.c_double(p[4]),
        ctypes.c_int32(kgrid),
        imatrix.ctypes.data_as(ctypes.c_void_p))"""
ERG.partition(ctypes.c_int32(grid),
        ctypes.c_int32(grid),
        ctypes.c_int32(totaltime),
        ctypes.c_double(xmin),
        ctypes.c_double(ymin),
        ctypes.c_double(deltax),
        ctypes.c_double(deltay),
        ctypes.c_int32(kgrid),
        imatrix.ctypes.data_as(ctypes.c_void_p))
print "finished c"
w = np.vectorize(lambda x: x)(imatrix)
imgplot = plt.imshow(w,interpolation='none' if grid > _sage_const_200  else 'nearest',cmap=cm.flag,extent=[xmin,xmin+grid*deltax,ymin,ymin+grid*deltay])
plt.savefig("outputs/ergodic_result.ps")
plt.clf()
end = time.time()
