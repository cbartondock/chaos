# This file was *autogenerated* from the file test.sage
from sage.all_cmdline import *   # import sage library
_sage_const_1 = Integer(1); _sage_const_200 = Integer(200); _sage_const_2p5 = RealNumber('2.5'); _sage_const_1p4 = RealNumber('1.4'); _sage_const_10 = Integer(10); _sage_const_1000 = Integer(1000); _sage_const_p3 = RealNumber('.3'); _sage_const_0 = Integer(0)
import numpy
import matplotlib.pylab as plt
import ctypes
import time
start=time.time()
LIB = '/Users/chrisdock/Documents/chaos/ccodefromsage/testchris/test.dylib'

param1 = _sage_const_1p4 
param2 = _sage_const_p3 
maxiter = _sage_const_10 
numsamples = _sage_const_200 

"""
ymin=0
ymax=2*N(pi)
xmin=0
xmax=2*N(pi)
"""
ymin = -_sage_const_2p5 
ymax = _sage_const_2p5  
xmin = -_sage_const_2p5 
xmax = _sage_const_2p5 

grid=_sage_const_1000 

deltax = (xmax-xmin)/grid
deltay = (ymax-ymin)/grid

mapnum = _sage_const_1 


X = ctypes.CDLL(LIB)
m = matrix.ones(grid,grid)
m = m.numpy('uint8')
print "started c"
X.forward(ctypes.c_ubyte(mapnum), 
       ctypes.c_double(param1),
       ctypes.c_double(param2),
	   ctypes.c_int32(maxiter),
	   ctypes.c_int32(numsamples),
       ctypes.c_int32(grid),
       ctypes.c_int32(grid),
	   ctypes.c_double(xmin),
	   ctypes.c_double(ymin),
	   ctypes.c_double(deltax),
       ctypes.c_double(deltay),
	   m.ctypes.data_as(ctypes.c_void_p))
print "finished c"
x = numpy.vectorize(lambda x: x)(m)
imgplot = plt.imshow(x,vmin=_sage_const_0 , vmax=_sage_const_1 ,interpolation='nearest')
plt.savefig("algc_result.png")
end=time.time()
print "total time: "+str(end-start)


