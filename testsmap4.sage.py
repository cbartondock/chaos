# This file was *autogenerated* from the file testsmap4.sage
from sage.all_cmdline import *   # import sage library
_sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0); _sage_const_10000 = Integer(10000); _sage_const_0p1 = RealNumber('0.1'); _sage_const_6p28 = RealNumber('6.28')
"""Dash's Algorithm"""

import time
from collections import Counter
from random import random as rand
import matplotlib.pyplot as plt
from sets import Set

#modulus
def rmod(x, y):
    result= x - int(x/y)*y;
    return result if result > _sage_const_0  else y + result    

#standard map generator
def smap_g(rho):
    def smap(p):
        x = rmod(N(p[_sage_const_0 ]+p[_sage_const_1 ]),_sage_const_2 *N(pi))
        y = rmod(N(p[_sage_const_1 ] + rho*sin(p[_sage_const_0 ]+p[_sage_const_1 ])),_sage_const_2 *N(pi))
        return [x,y]
    return smap


mysmap = smap_g(_sage_const_1 )
trajx=[]
trajy=[]
point=(_sage_const_0p1 ,_sage_const_0 )
for i in range(_sage_const_0 ,_sage_const_10000 ):
    print(i)
    trajx.append(point[_sage_const_0 ])
    trajy.append(point[_sage_const_1 ])
    point=mysmap(point)
plt.xlim([_sage_const_0 ,_sage_const_6p28 ])
plt.ylim([_sage_const_0 ,_sage_const_6p28 ])
lp=plt.scatter(trajx,trajy)
plt.savefig("trajectory.png")
